<% if (iconsStyles && stylesheet === 'scss') { %>

////
//// The Hatchd Eggbox icon-font set
//// Generated by grunt-webfont
//// @author Hatchd Digital
//// @group Eggbox
////

/// Eggbox icon mapping
/// @type Map
$eggbox-icons: (
    <% for (var glyphIdx = 0; glyphIdx < glyphs.length; glyphIdx++) { %>
        '<%= glyphs[glyphIdx] %>' : '<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>',<% } %>
);

/// Default eggbox fallback settings
/// @type Map
$eggbox-fallbacks:(
  'color' : '000000',
  'size' : 16,
  'url' : '../images/eggbox'
) !default;

/// Provide eggbox image fallback
/// @type Variable
$eggbox-usefallback: true !default;

/// Call an eggbox icon to use
/// @author Jack Armley
/// @group Eggbox
/// @param {String} $icon [false] - Icon to use, from `$eggboxicons`
/// @param {String} $position [before] - Pseudo element to use (before or after)
/// @param {Boolean} $styles [true] - Include styles (true or false)
/// @requires {Variable} $eggbox-icons
@mixin eggbox($icon: false, $position: before, $styles: true) {
  &:#{$position} {
    @if $icon {
      content: map-get($eggbox-icons, $icon);
    }
    @if $styles{
      display:inline-block;
      font:{
        family:<%= fontBaseName %>;
        weight:normal;
        style:normal;
      };
      text:{
        decoration:inherit;
        transform:none;
      };
      -webkit-font-smoothing:antialiased;
      -moz-osx-font-smoothing:grayscale;
      speak:none;
    }
  }
}

/// Provide an image fallback for an eggbox icon
/// Should only really come into play for IE7 (so very rarely)
/// It only outputs a background-image, so usage is flexible
/// @author Jack Armley
/// @group Eggbox
/// @param {String} $icon [false] - Icon to use, from `$eggboxicons`
/// @param {Map|Variable} $fallbacks [$eggbox-fallbacks] - Fallback properties map to use
@mixin eggbox-imgfallback($icon: false, $fallbacks: $eggbox-fallbacks){

  // If a different map has been specified, merge
  // it with the $eggbox-fallbacks map for this instance
  @if $fallbacks not $eggbox-fallbacks{
    $fallbacks: map-merge($eggbox-fallbacks,$fallbacks);
  }

  // Fallback URL
  // @type Variable
  $fallback-url: '#{map-get($fallbacks,url)}/#{$icon}-#{map-get($fallbacks,size)}x#{map-get($fallbacks,size)}-#{map-get($fallbacks,color)}.png';
  background-image: url('#{$fallback-url}');

}

/**
* Eggbox @font-face declaration
**/
<% if (fontfaceStyles) { %>
    @font-face {
        font-family:"<%= fontBaseName %>";<% if (fontSrc1) { %>
        src:<%= fontSrc1 %>;<% }%>
        src:<%= fontSrc2 %>;
        font-weight:normal;
        font-style:normal;
    }
<% } %>

/**
 * Eggbox classes
 * An alternative to using the mixin
 * (which is the preferred option)
 */
[data-eggbox]{
  @include eggbox;
}
@each $key, $value in $eggbox-icons{
    [data-eggbox="#{$key}"]{
      @include eggbox($key,before,false);
    }
}

<% } %>

<% if (iconsStyles && stylesheet === 'less') { %>

//
// The Hatchd Eggbox icon-font set
// @author Hatchd Digital
// Generated by grunt-webfont
//

// Fallback variables
@eggboxfallback-url: '../images/eggbox';
@eggboxfallback-color: '000000';
@eggboxfallback-size: 16;

// Call an eggbox icon to use
// @author Jack Armley
#eggbox{
    <% for (var glyphIdx = 0; glyphIdx < glyphs.length; glyphIdx++) { %>
        .<%= glyphs[glyphIdx] %>(@pos:before) when(@pos = before){
            &:before {
                content:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";
                font-family:"<%= fontBaseName %>";
                display:inline-block;
                font-weight:normal;
                font-style:normal;
                speak:none;
                text-decoration:inherit;
                text-transform:none;
                -webkit-font-smoothing:antialiased;
                -moz-osx-font-smoothing:grayscale;
            }
        }
        .<%= glyphs[glyphIdx] %>(@pos) when(@pos = after){
            &:after {
                content:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";
                font-family:"<%= fontBaseName %>";
                display:inline-block;
                font-weight:normal;
                font-style:normal;
                speak:none;
                text-decoration:inherit;
                text-transform:none;
                -webkit-font-smoothing:antialiased;
                -moz-osx-font-smoothing:grayscale;
            }
        }
    <% } %>
}


// Fallback for browsers that don't support
// @font-face and generated content
// Override fallback variables in per project,
// outside of this file.
#eggbox-imgfallback{
    <% for (var glyphIdx = 0; glyphIdx < glyphs.length; glyphIdx++) { %>
            .<%= glyphs[glyphIdx] %>(@colour:@eggbox-col--default,@size:@eggbox-size){
                background-image:url("@{eggboxfallback-url}/png/<%= glyphs[glyphIdx] %>-@{eggboxfallback-size}x@{eggboxfallback-size}-@{eggboxfallback-colour}.png");
            }
    <% } %>
}

/**
* Eggbox @font-face declaration
**/
<% if (fontfaceStyles) { %>
    @font-face {
        font-family:"<%= fontBaseName %>";<% if (fontSrc1) { %>
        src:<%= fontSrc1 %>;<% }%>
        src:<%= fontSrc2 %>;
        font-weight:normal;
        font-style:normal;
    }
<% } %>

/**
 * Eggbox classes
 * An alternative to using the mixin
 * (which is the preferred option)
 */
[data-eggbox]:before{
    font-family:"<%= fontBaseName %>";
    display:inline-block;
    font-weight:normal;
    font-style:normal;
    speak:none;
    text-decoration:inherit;
    text-transform:none;
    -webkit-font-smoothing:antialiased;
    -moz-osx-font-smoothing:grayscale;
}
<% for (var glyphIdx = 0; glyphIdx < glyphs.length; glyphIdx++) { %>
    [data-eggbox="<%= glyphs[glyphIdx] %>"]:before {
        content:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";
    }
<% } %>



<% } %>

<% if (iconsStyles && stylesheet === 'css') { %>

/**
 * The Hatchd Eggbox icon-font set
 * @author Hatchd Digital
 * Generated by grunt-webfont
 */

/**
* Eggbox @font-face declaration
**/
<% if (fontfaceStyles) { %>
    @font-face {
        font-family:"<%= fontBaseName %>";<% if (fontSrc1) { %>
        src:<%= fontSrc1 %>;<% }%>
        src:<%= fontSrc2 %>;
        font-weight:normal;
        font-style:normal;
    }
<% } %>

/**
 * Eggbox classes
 */
[class^="eggbox-"]{
    display:inline-block;
    font-weight:normal;
    font-style:normal;
    font-family:"<%= fontBaseName %>";
    speak:none;
    text-decoration:inherit;
    text-transform:none;
    -webkit-font-smoothing:antialiased;
    -moz-osx-font-smoothing:grayscale;
}
<% for (var glyphIdx = 0; glyphIdx < glyphs.length; glyphIdx++) { %>
    .eggbox-<%= glyphs[glyphIdx] %>:before {
        content:"<% if (addLigatures) { %><%= glyphs[glyphIdx] %><% } else { %>\<%= codepoints[glyphIdx] %><% } %>";
    }
<% } %>

<% } %>
